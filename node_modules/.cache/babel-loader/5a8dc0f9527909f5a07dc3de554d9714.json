{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rober\\\\Desktop\\\\React_2019\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rober\\\\Desktop\\\\React_2019\\\\src\\\\context\\\\github\\\\GithubState.js\";\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../typess';\nimport React, { useReducer } from 'react';\nimport GithubContext from './githubContext';\nimport axios from 'axios';\nimport githubReducer from './githubReducer';\n\nconst githubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const _useReducer = useReducer(GithubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Search Users\n  // Get Users\n  // Get Repos\n  // Clear Users\n  // Set Loading\n\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default githubState;","map":{"version":3,"sources":["C:/Users/rober/Desktop/React_2019/src/context/github/GithubState.js"],"names":["CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","React","useReducer","GithubContext","axios","githubReducer","githubState","props","initialState","users","user","repos","loading","GithubReducer","state","dispatch","children"],"mappings":";;AAAA,SACIA,WADJ,EAEIC,SAFJ,EAGIC,QAHJ,EAIIC,YAJJ,EAKIC,WALJ,QAMO,WANP;AAOA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,IAAI,EAAE,EAFW;AAGjBC,IAAAA,KAAK,EAAE,EAHU;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;;AADyB,sBAOKV,UAAU,CAACW,aAAD,EAAgBL,YAAhB,CAPf;AAAA;AAAA,QAOdM,KAPc;AAAA,QAOPC,QAPO,oBAS7B;AAEA;AAEA;AAEA;AAEA;;;AAEA,SAAO,oBAAC,aAAD,CAAe,QAAf;AACC,IAAA,KAAK,EAAE;AACHN,MAAAA,KAAK,EAAEK,KAAK,CAACL,KADV;AAEHC,MAAAA,IAAI,EAAEI,KAAK,CAACJ,IAFT;AAGHC,MAAAA,KAAK,EAAEG,KAAK,CAACH,KAHV;AAIHC,MAAAA,OAAO,EAAEE,KAAK,CAACF;AAJZ,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASEL,KAAK,CAACS,QATR,CAAP;AAWC,CA9BD;;AAgCA,eAAeV,WAAf","sourcesContent":["import {\r\n    CLEAR_USERS,\r\n    GET_REPOS,\r\n    GET_USER,\r\n    SEARCH_USERS,\r\n    SET_LOADING\r\n} from '../typess';\r\nimport React, { useReducer } from 'react';\r\n\r\nimport GithubContext from './githubContext';\r\nimport axios from 'axios';\r\nimport githubReducer from './githubReducer';\r\n\r\nconst githubState = props => {\r\n    const initialState = {\r\n        users: [],\r\n        user: {},\r\n        repos: [],\r\n        loading: false\r\n        }\r\n        const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n// Search Users\r\n\r\n// Get Users\r\n\r\n// Get Repos\r\n\r\n// Clear Users\r\n\r\n// Set Loading\r\n\r\nreturn <GithubContext.Provider\r\n        value={{\r\n            users: state.users,\r\n            user: state.user,\r\n            repos: state.repos,\r\n            loading: state.loading\r\n        }}\r\n>\r\n\r\n        {props.children}\r\n</GithubContext.Provider>\r\n}\r\n\r\nexport default githubState;"]},"metadata":{},"sourceType":"module"}