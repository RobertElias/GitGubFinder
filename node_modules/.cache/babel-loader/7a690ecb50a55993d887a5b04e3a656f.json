{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rober\\\\Desktop\\\\React_2019\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rober\\\\Desktop\\\\React_2019\\\\src\\\\components\\\\users\\\\Search.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  const _userState = userState(''),\n        _userState2 = _slicedToArray(_userState, 2),\n        text = _userState2[0],\n        setText = _userState2[1];\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    value: text,\n    placeholder: \"Search Users...\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["C:/Users/rober/Desktop/React_2019/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","setAlert","userState","text","setText","onSubmit","e","preventDefault","onChange","target","value","propTypes","func","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA,UAAzB;AAAqCC,EAAAA;AAArC,CAAD,KAAoD;AAAA,qBAC3CC,SAAS,CAAC,EAAD,CADkC;AAAA;AAAA,QAC5DC,IAD4D;AAAA,QACtDC,OADsD;;AAKjE,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACfF,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACD,KAFD,MAEO;AACLH,MAAAA,WAAW,CAACK,IAAD,CAAX;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GARD;;AAUA,QAAMI,QAAQ,GAAGF,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAA7B;;AACE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEL,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEF,IAHT;AAIE,IAAA,WAAW,EAAC,iBAJd;AAKE,IAAA,QAAQ,EAAEK,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGT,SAAS,IACR;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAuBD,CAvCH;;AAyCAH,MAAM,CAACc,SAAP,GAAmB;AACjBb,EAAAA,WAAW,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADX;AAEjBb,EAAAA,UAAU,EAAEJ,SAAS,CAACgB,IAAV,CAAeC,UAFV;AAGjBd,EAAAA,SAAS,EAAEH,SAAS,CAACkB,IAAV,CAAeD,UAHT;AAIjBZ,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,IAAV,CAAeC;AAJR,CAAnB;AAOA,eAAehB,MAAf","sourcesContent":["import React, {useState} from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Search = ({searchUsers, showClear, clearUsers, setAlert}) => {\r\nconst [text, setText] = userState('');\r\n\r\n \r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    if (text === '') {\r\n      setAlert('Please enter something', 'light')\r\n    } else {\r\n      searchUsers(text)\r\n      setText('');\r\n    }\r\n  }\r\n\r\n  const onChange = e => setText(e.target.value)\r\n    return (\r\n      <div>\r\n        <form className='form' onSubmit={onSubmit}>\r\n          <input\r\n            type='text'\r\n            name='text'\r\n            value={text}\r\n            placeholder='Search Users...'\r\n            onChange={onChange}\r\n          />\r\n          <input\r\n            type='submit'\r\n            value='Search'\r\n            className='btn btn-dark btn-block'\r\n          />\r\n        </form>\r\n        {showClear && (\r\n          <button className='btn btn-light btn-block' onClick={clearUsers}>\r\n            Clear\r\n          </button>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\nSearch.propTypes = {\r\n  searchUsers: PropTypes.func.isRequired,\r\n  clearUsers: PropTypes.func.isRequired,\r\n  showClear: PropTypes.bool.isRequired,\r\n  setAlert: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Search"]},"metadata":{},"sourceType":"module"}