{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\rober\\\\Desktop\\\\React_2019\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\rober\\\\Desktop\\\\React_2019\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Fragment, useState } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport About from './components/pages/About';\nimport Alert from './components/layout/Alert';\nimport Navbar from './components/layout/Navbar';\nimport Search from './components/users/Search';\nimport User from './components/users/User';\nimport Users from './components/users/Users';\nimport axios from 'axios';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1],\n        _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1],\n        _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        repos = _useState6[0],\n        setRepose = _useState6[1],\n        _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1],\n        _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alert = _useState10[0],\n        setAlert = _useState10[1]; // search github users\n\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUsers(res.data.item);\n    setLoading(false);\n  }; // get single github user\n\n\n  const getUser = async username => {\n    setLoading(true);\n    console.log(username);\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUser(res.data);\n    setLoading(false);\n  }; // get users repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    console.log(username);\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setRepos(res.data);\n    setLoading(false);\n  }; // clear users\n\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  }; // set Alert\n\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    alert: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Search, {\n      searchUsers: searchUsers,\n      clearUsers: clearUsers,\n      showClear: users.length > 0,\n      setAlert: showAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Users, {\n      loading: loading,\n      users: users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: `/user/:login`,\n    render: props => React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      repos: repos,\n      user: user,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rober/Desktop/React_2019/src/App.js"],"names":["React","Fragment","useState","Route","BrowserRouter","Router","Switch","About","Alert","Navbar","Search","User","Users","axios","App","users","setUsers","user","setUser","repos","setRepose","loading","setLoading","alert","setAlert","searchUsers","text","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","item","getUser","username","console","log","getUserRepos","setRepos","clearUsers","showAlert","msg","type","setTimeout","props","length"],"mappings":"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","sourcesContent":["import './App.css'\n\nimport React, { Fragment, useState } from 'react'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\n\nimport About from './components/pages/About'\nimport Alert from './components/layout/Alert'\nimport Navbar from './components/layout/Navbar'\nimport Search from './components/users/Search'\nimport User from './components/users/User'\nimport Users from './components/users/Users'\nimport axios from 'axios'\n\nconst App = () => {\n  const [users, setUsers] = useState([]),\n  [user, setUser] = useState({}),\n  [repos, setRepose] = useState([]),\n  [loading, setLoading] = useState(false),\n  [alert, setAlert] = useState(null)\n  \n\n  // search github users\n  const searchUsers = async text => {\n   setLoading(true);\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    )\n  setUsers(res.data.item);\n  setLoading(false);\n  }\n\n  // get single github user\n  const getUser = async username => {\n    setLoading(true);\n    console.log(username)\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    )\n\n  setUser(res.data);\n  setLoading(false);\n  }\n\n  // get users repos\n  const getUserRepos = async username => {\n    setLoading(true);\n    console.log(username)\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    )\n\n    setRepos(res.data)\n    setLoading(false);\n  }\n\n  // clear users\n  const clearUsers = () => {\n    setUsers([])\n    setLoading(false);\n  }\n\n  // set Alert\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type });\n    setTimeout(() => setAlert(null), 5000)\n  };\n\n    return (\n      <Router>\n        <div className='App'>\n          <Navbar />\n          <div className='container'>\n            <Alert alert={alert} />\n            <Switch>\n              <Route\n                exact\n                path='/'\n                render={props => (\n                  <Fragment>\n                    <Search\n                      searchUsers={searchUsers}\n                      clearUsers={clearUsers}\n                      showClear={users.length > 0}\n                      setAlert={showAlert}\n                    />\n                    <Users loading={loading} users={users} />\n                  </Fragment>\n                )}\n              />\n              <Route exact path='/about' component={About} />\n              <Route\n                exact\n                path={`/user/:login`}\n                render={props => (\n                  <User\n                    {...props}\n                    getUser={getUser}\n                    getUserRepos={getUserRepos}\n                    repos={repos}\n                    user={user}\n                    loading={loading}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}