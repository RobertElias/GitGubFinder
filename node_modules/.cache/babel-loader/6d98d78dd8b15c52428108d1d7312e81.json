{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rober\\\\Desktop\\\\REACT_FRONTTOBACK_2019\\\\github_finder\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component, Fragment } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport About from './components/pages/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Search from './components/Search';\nimport User from './components/User';\nimport Users from './components/Users';\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      loading: false,\n      alert: null,\n      repos: []\n    };\n\n    this.searchUsers = async text => {\n      console.log(process.env.REACT_APP_CLIENT_USER_SECRET);\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_CLIENT_USER_ID}&client_secret=${process.env.REACT_APP_CLIENT_USER_SECRET}`);\n      console.log(res.data);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      }); //console.log(this.setState.data);\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_CLIENT_USER_ID}&client_secret=${process.env.REACT_APP_CLIENT_USER_SECRET}`);\n      this.setState({\n        users: res.data,\n        loading: false\n      });\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_CLIENT_USER_ID}&client_secret=${process.env.REACT_APP_CLIENT_USER_SECRET}`);\n      this.setState({\n        repos: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => this.setState({\n      users: [],\n      loading: false\n    });\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg: msg,\n          type: type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          users = _this$state.users,\n          loading = _this$state.loading;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      alert: this.state.alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Users, {\n        loading: loading,\n        users: users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), \"]\", React.createElement(Route, {\n      exact: true,\n      path: \"/user/:login\",\n      render: props => React.createElement(User, Object.assign({}, props, {\n        getUser: this.getUser,\n        getUserRepos: this.getUserRepos,\n        user: user,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rober/Desktop/REACT_FRONTTOBACK_2019/github_finder/src/App.js"],"names":["React","Component","Fragment","Route","BrowserRouter","Router","Switch","About","Alert","Navbar","Search","User","Users","axios","App","state","users","user","loading","alert","repos","searchUsers","text","console","log","process","env","REACT_APP_CLIENT_USER_SECRET","setState","res","get","REACT_APP_CLIENT_USER_ID","data","items","getUser","username","getUserRepos","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import './App.css';\n\nimport React, {Component, Fragment} from 'react'\nimport {Route, BrowserRouter as Router, Switch} from 'react-router-dom'\n\nimport About from './components/pages/About'\nimport Alert from './components/Alert'\nimport Navbar from './components/Navbar'\nimport Search from './components/Search'\nimport User from './components/User'\nimport Users from './components/Users'\nimport axios from \"axios\";\n\nclass App extends Component {\n\n  state = {\n    users: [],\n    user: {},\n    loading: false,\n    alert: null,\n    repos: []\n  }\n\n//   async componentDidMount(){\n//     console.log(process.env.REACT_APP_CLIENT_ID)\n//     this.setState({loading: true})\n//     const res = await axios.get(`https://api.github.com/users?client_id=$\n//     {process.env.REACT_APP_CLIENT_ID}$client_secret=$\n//     {process.env.REACT_APP_CLIENT_SECRET}`);\n//     console.log(res.data)\n//     this.setState({users: res.data, loading: false});\n//     console.log(this.setState.data);\n//  }\n\n  //Search Github users\n  searchUsers = async (text) => {\n    console.log(process.env.REACT_APP_CLIENT_USER_SECRET)\n    this.setState({loading: true})\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${\n      process.env.REACT_APP_CLIENT_USER_ID\n    }&client_secret=${process.env.REACT_APP_CLIENT_USER_SECRET}`\n    );\n    console.log(res.data)\n    this.setState({users: res.data.items, loading: false});\n    //console.log(this.setState.data);\n    \n  };\n\n  // Get a single Github user\ngetUser = async (username) => {\n  this.setState({loading: true})\n  \n  const res = await axios.get(`https://api.github.com/users/${username}?client_id=${\n  process.env.REACT_APP_CLIENT_USER_ID\n  }&client_secret=${process.env.REACT_APP_CLIENT_USER_SECRET}`\n  );\n\n  this.setState({users: res.data, loading: false});\n};\n\n// get user REPOS\n\ngetUserRepos = async (username) => {\n  this.setState({loading: true})\n  \n  const res = await axios.get(`https://api.github.com/users/${username}repos?per_page=5&sort=created:asc&client_id=${\n  process.env.REACT_APP_CLIENT_USER_ID\n  }&client_secret=${process.env.REACT_APP_CLIENT_USER_SECRET}`\n  );\n\n  this.setState({repos: res.data, loading: false});\n};\n\n  // Clear users from state\n  clearUsers = ()=> this.setState({ users: [], loading: false})\n\n  // set alert for empty string\n  setAlert = (msg, type) => {\n    this.setState({alert: {msg: msg, type: type}});\n    setTimeout(()=> this.setState({alert: null}), 5000)\n  }\n  render(){\n\n     const { user, users, loading } = this.state;\n\n     return (\n\n      <Router>\n      \n      \n    <div className=\"App\">\n      <Navbar/>\n      <div className=\"container\">\n      <Alert alert={this.state.alert}/>\n      <Switch>\n      <Route exact path='/' \n      render={props => (\n        <Fragment>\n        <Search \n          searchUsers={this.searchUsers} \n          clearUsers={this.clearUsers} \n          showClear={users.length > 0 ? true: false}\n          setAlert={this.setAlert}\n          />\n        <Users \n        loading={loading} \n        users={users}\n        />\n        </Fragment>\n      )}/>\n      <Route exact path='/about' component={About}/>]\n      <Route exact path='/user/:login'\n        render={props=>(\n        <User \n        { ...props } \n        getUser={this.getUser} \n        getUserRepos={this.getUserRepos}\n        user={user} \n        loading={loading}\n        />\n      )}\n      />\n      </Switch>\n      </div>\n   </div>\n   </Router>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}