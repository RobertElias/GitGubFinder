{"ast":null,"code":"var _jsxFileName = \"/Users/robertelias/Documents/React_2019/src/components/users/User.js\";\nimport React, { Fragment, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Repos from '../repos/Repos';\nimport Spinner from '../layout/Spinner';\nimport GithubContext from '../../context/github/githubContext';\n\nconst User = ({\n  getUserRepos,\n  repos,\n  match\n}) => {\n  const githubContext = useContext(GithubContext);\n  const getUser = githubContext.getUser,\n        loading = githubContext.loading,\n        user = githubContext.user;\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login); //es-lint-disable-nextline\n  }, []);\n  const name = user.name,\n        avatar_url = user.avatar_url,\n        location = user.location,\n        bio = user.bio,\n        login = user.login,\n        html_url = user.html_url,\n        followers = user.followers,\n        following = user.following,\n        public_gists = user.public_gists,\n        public_repos = user.public_repos,\n        hireable = user.hireable,\n        blog = user.blog,\n        company = user.company;\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Back to Search\"), \"Hireable:\", ' ', hireable ? React.createElement(\"i\", {\n    className: \"fas fa-check text-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"fas fa-times-circle text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card grid-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"all-centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: avatar_url,\n    alt: \"\",\n    className: \"round-img\",\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Location: \", location)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, bio && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Bio\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, bio)), React.createElement(\"a\", {\n    href: html_url,\n    className: \"btn btn-dark my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Visit GitHub profile\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, login && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Username: \", login, \" \"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, company && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Company: \", company))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, blog && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Website: \", React.createElement(\"a\", {\n    href: `https://${blog}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, blog), ' ')))))), React.createElement(\"div\", {\n    className: \"car text-centre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Followers: \", followers), React.createElement(\"div\", {\n    className: \"badge badge-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Following: \", following), React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Public repos: \", public_repos), React.createElement(\"div\", {\n    className: \"badge badge-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Public gists: \", public_gists)), React.createElement(Repos, {\n    repos: repos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }));\n};\n\nUser.propTypes = {\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/Users/robertelias/Documents/React_2019/src/components/users/User.js"],"names":["React","Fragment","useEffect","useContext","Link","PropTypes","Repos","Spinner","GithubContext","User","getUserRepos","repos","match","githubContext","getUser","loading","user","params","login","name","avatar_url","location","bio","html_url","followers","following","public_gists","public_repos","hireable","blog","company","width","propTypes","object","isRequired","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA;AAAvB,CAAD,KAAoC;AAC/C,QAAMC,aAAa,GAAGV,UAAU,CAACK,aAAD,CAAhC;AAD+C,QAEvCM,OAFuC,GAEZD,aAFY,CAEvCC,OAFuC;AAAA,QAE9BC,OAF8B,GAEZF,aAFY,CAE9BE,OAF8B;AAAA,QAErBC,IAFqB,GAEZH,aAFY,CAErBG,IAFqB;AAI/Cd,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACF,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAP;AACAR,IAAAA,YAAY,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAZ,CAFc,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAJ+C,QAW7CC,IAX6C,GAwB3CH,IAxB2C,CAW7CG,IAX6C;AAAA,QAY7CC,UAZ6C,GAwB3CJ,IAxB2C,CAY7CI,UAZ6C;AAAA,QAa7CC,QAb6C,GAwB3CL,IAxB2C,CAa7CK,QAb6C;AAAA,QAc7CC,GAd6C,GAwB3CN,IAxB2C,CAc7CM,GAd6C;AAAA,QAe7CJ,KAf6C,GAwB3CF,IAxB2C,CAe7CE,KAf6C;AAAA,QAgB7CK,QAhB6C,GAwB3CP,IAxB2C,CAgB7CO,QAhB6C;AAAA,QAiB7CC,SAjB6C,GAwB3CR,IAxB2C,CAiB7CQ,SAjB6C;AAAA,QAkB7CC,SAlB6C,GAwB3CT,IAxB2C,CAkB7CS,SAlB6C;AAAA,QAmB7CC,YAnB6C,GAwB3CV,IAxB2C,CAmB7CU,YAnB6C;AAAA,QAoB7CC,YApB6C,GAwB3CX,IAxB2C,CAoB7CW,YApB6C;AAAA,QAqB7CC,QArB6C,GAwB3CZ,IAxB2C,CAqB7CY,QArB6C;AAAA,QAsB7CC,IAtB6C,GAwB3Cb,IAxB2C,CAsB7Ca,IAtB6C;AAAA,QAuB7CC,OAvB6C,GAwB3Cd,IAxB2C,CAuB7Cc,OAvB6C;AA0B/C,MAAIf,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIY,GAJZ,EAKGa,QAAQ,GACP;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAGP;AAAG,IAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAUE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAER,UADP;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,IAAA,SAAS,EAAC,WAHZ;AAIE,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE;AAAT,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,IAAL,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcE,QAAd,CARF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,GAAG,IACF,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,GAAJ,CAFF,CAFJ,EAOE;AAAG,IAAA,IAAI,EAAEC,QAAT;AAAmB,IAAA,SAAS,EAAC,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,IACJ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAmBA,KAAnB,MADF,CAFJ,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,OAAO,IACN,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkBA,OAAlB,CADF,CAFJ,CARF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,IACH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACW;AAAG,IAAA,IAAI,EAAG,WAAUA,IAAK,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,IAA7B,CADX,EACkD,GADlD,CADF,CAFJ,CAfF,CAVF,CAXF,CAVF,EA0DE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiDL,SAAjD,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiDC,SAAjD,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkDE,YAAlD,CAHF,EAIE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiDD,YAAjD,CAJF,CA1DF,EAgEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEf,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhEF,CADF;AAoED,CAhGD;;AAkGAF,IAAI,CAACuB,SAAL,GAAiB;AACfhB,EAAAA,IAAI,EAAEX,SAAS,CAAC4B,MAAV,CAAiBC,UADR;AAGfvB,EAAAA,KAAK,EAAEN,SAAS,CAAC8B,KAAV,CAAgBD;AAHR,CAAjB;AAKA,eAAezB,IAAf","sourcesContent":["import React, { Fragment, useEffect, useContext } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Repos from '../repos/Repos';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ getUserRepos, repos, match }) => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { getUser, loading, user } = githubContext;\r\n\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    //es-lint-disable-nextline\r\n  }, []);\r\n\r\n  const {\r\n    name,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_gists,\r\n    public_repos,\r\n    hireable,\r\n    blog,\r\n    company\r\n  } = user;\r\n\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to='/' className='btn btn-light'>\r\n        Back to Search\r\n      </Link>\r\n      Hireable:{' '}\r\n      {hireable ? (\r\n        <i className='fas fa-check text-success' />\r\n      ) : (\r\n        <i className='fas fa-times-circle text-danger' />\r\n      )}\r\n      <div className='card grid-2'>\r\n        <div className='all-centre'>\r\n          <img\r\n            src={avatar_url}\r\n            alt=''\r\n            className='round-img'\r\n            style={{ width: '150px' }}\r\n          />\r\n          <h1>{name}</h1>\r\n          <p>Location: {location}</p>\r\n        </div>\r\n        <div>\r\n          {bio && (\r\n            <Fragment>\r\n              <h3>Bio</h3>\r\n              <p>{bio}</p>\r\n            </Fragment>\r\n          )}\r\n          <a href={html_url} className='btn btn-dark my-1'>\r\n            Visit GitHub profile\r\n          </a>\r\n          <ul>\r\n            <li>\r\n              {login && (\r\n                <Fragment>\r\n                  <strong>Username: {login} </strong>\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {company && (\r\n                <Fragment>\r\n                  <strong>Company: {company}</strong>\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {blog && (\r\n                <Fragment>\r\n                  <strong>\r\n                    Website: <a href={`https://${blog}`}>{blog}</a>{' '}\r\n                  </strong>\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className='car text-centre'>\r\n        <div className='badge badge-primary'>Followers: {followers}</div>\r\n        <div className='badge badge-success'>Following: {following}</div>\r\n        <div className='badge badge-light'>Public repos: {public_repos}</div>\r\n        <div className='badge badge-dark'>Public gists: {public_gists}</div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nUser.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n\r\n  repos: PropTypes.array.isRequired\r\n};\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}