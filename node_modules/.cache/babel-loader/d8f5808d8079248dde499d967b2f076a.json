{"ast":null,"code":"import _slicedToArray from \"/Users/robertelias/Desktop/GitHubFinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/robertelias/Desktop/GitHubFinder/src/context/github/GithubState.js\";\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../types';\nimport React, { useReducer } from 'react';\nimport GithubContext from './githubContext';\nimport githubReducer from './githubReducer';\nimport axios from 'axios';\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const _useReducer = useReducer(githubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Search Users\n\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.githubClientId}&client_secret=${process.env.githubClientSecret}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get Users\n\n\n  const getUser = async username => {\n    setLoading(true);\n    console.log(username);\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.githubClientId}&client_secret=${process.env.githubClientSecret}`);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // Get Repos\n  // get users repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    console.log(username);\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.githubClientId}&client_secret=${process.env.githubClientSecret}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; // Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/robertelias/Desktop/GitHubFinder/src/context/github/GithubState.js"],"names":["CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","React","useReducer","GithubContext","githubReducer","axios","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","type","payload","data","items","getUser","username","console","log","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import {\r\n  CLEAR_USERS,\r\n  GET_REPOS,\r\n  GET_USER,\r\n  SEARCH_USERS,\r\n  SET_LOADING\r\n} from '../types';\r\nimport React, { useReducer } from 'react';\r\n\r\nimport GithubContext from './githubContext';\r\nimport githubReducer from './githubReducer';\r\nimport axios from 'axios';\r\n\r\nlet githubClientId;\r\nlet githubClientSecret;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n} else {\r\n  githubClientId = process.env.GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n}\r\n\r\nconst GithubState = props => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false\r\n  };\r\n  const [state, dispatch] = useReducer(githubReducer, initialState);\r\n\r\n  // Search Users\r\n  const searchUsers = async text => {\r\n    setLoading();\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.githubClientId}&client_secret=${process.env.githubClientSecret}`\r\n    );\r\n    dispatch({ type: SEARCH_USERS, payload: res.data.items });\r\n  };\r\n\r\n  // Get Users\r\n\r\n  const getUser = async username => {\r\n    setLoading(true);\r\n    console.log(username);\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}?client_id=${process.env.githubClientId}&client_secret=${process.env.githubClientSecret}`\r\n    );\r\n\r\n    dispatch({ type: GET_USER, payload: res.data });\r\n  };\r\n\r\n  // Get Repos\r\n  // get users repos\r\n  const getUserRepos = async username => {\r\n    setLoading(true);\r\n    console.log(username);\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.githubClientId}&client_secret=${process.env.githubClientSecret}`\r\n    );\r\n\r\n    dispatch({ type: GET_REPOS, payload: res.data });\r\n  };\r\n\r\n  // Clear Users\r\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\r\n\r\n  // Set Loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n        getUserRepos\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n"]},"metadata":{},"sourceType":"module"}