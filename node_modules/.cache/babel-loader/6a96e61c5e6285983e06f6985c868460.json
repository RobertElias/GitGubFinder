{"ast":null,"code":"import _slicedToArray from \"/Users/robertelias/Documents/React_2019/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/robertelias/Documents/React_2019/src/components/users/Search.js\";\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/github/gitHubContext';\n\nconst Search = ({\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  const githubContext = useContext(GithubContext);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      githubContext.searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = e => setText(e.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    value: text,\n    placeholder: \"Search Users...\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/robertelias/Documents/React_2019/src/components/users/Search.js"],"names":["React","useState","useContext","PropTypes","GithubContext","Search","showClear","clearUsers","setAlert","githubContext","text","setText","onSubmit","e","preventDefault","searchUsers","onChange","target","value","propTypes","func","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAAD,KAAyC;AACtD,QAAMC,aAAa,GAAGP,UAAU,CAACE,aAAD,CAAhC;;AADsD,oBAG9BH,QAAQ,CAAC,EAAD,CAHsB;AAAA;AAAA,QAG/CS,IAH+C;AAAA,QAGzCC,OAHyC;;AAKtD,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACfF,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACD,KAFD,MAEO;AACLC,MAAAA,aAAa,CAACM,WAAd,CAA0BL,IAA1B;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GARD;;AAUA,QAAMK,QAAQ,GAAGH,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAA7B;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEN,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEF,IAHT;AAIE,IAAA,WAAW,EAAC,iBAJd;AAKE,IAAA,QAAQ,EAAEM,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGV,SAAS,IACR;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAuBD,CAxCD;;AA0CAF,MAAM,CAACc,SAAP,GAAmB;AACjBZ,EAAAA,UAAU,EAAEJ,SAAS,CAACiB,IAAV,CAAeC,UADV;AAEjBf,EAAAA,SAAS,EAAEH,SAAS,CAACmB,IAAV,CAAeD,UAFT;AAGjBb,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,IAAV,CAAeC;AAHR,CAAnB;AAMA,eAAehB,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GithubContext from '../../context/github/gitHubContext';\r\n\r\nconst Search = ({ showClear, clearUsers, setAlert }) => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      setAlert('Please enter something', 'light');\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  const onChange = e => setText(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <form className='form' onSubmit={onSubmit}>\r\n        <input\r\n          type='text'\r\n          name='text'\r\n          value={text}\r\n          placeholder='Search Users...'\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type='submit'\r\n          value='Search'\r\n          className='btn btn-dark btn-block'\r\n        />\r\n      </form>\r\n      {showClear && (\r\n        <button className='btn btn-light btn-block' onClick={clearUsers}>\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  clearUsers: PropTypes.func.isRequired,\r\n  showClear: PropTypes.bool.isRequired,\r\n  setAlert: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}