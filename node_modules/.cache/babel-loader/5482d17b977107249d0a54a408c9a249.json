{"ast":null,"code":"var _jsxFileName = \"/Users/robertelias/Documents/React_2019/src/components/users/Users.js\";\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport UserItem from './UserItem';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Users = () => {\n  const githubContext = useContext(GithubContext);\n  const loading = githubContext.loading,\n        users = githubContext.users;\n\n  if (loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      style: userStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, users.map(user => React.createElement(UserItem, {\n      key: user.id,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })));\n  }\n};\n\nUsers.PropTypes = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n};\nexport default Users;","map":{"version":3,"sources":["/Users/robertelias/Documents/React_2019/src/components/users/Users.js"],"names":["PropTypes","React","useContext","Spinner","UserItem","GithubContext","Users","githubContext","loading","users","userStyle","map","user","id","array","isRequired","bool","display","gridTemplateColumns","gridGap"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,aAAa,GAAGL,UAAU,CAACG,aAAD,CAAhC;AADkB,QAEVG,OAFU,GAESD,aAFT,CAEVC,OAFU;AAAA,QAEDC,KAFC,GAESF,aAFT,CAEDE,KAFC;;AAGlB,MAAID,OAAJ,EAAa;AACX,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,WACE;AAAK,MAAA,KAAK,EAAEE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IACb,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAOD;AACF,CAdD;;AAeAN,KAAK,CAACN,SAAN,GAAkB;AAChBS,EAAAA,KAAK,EAAET,SAAS,CAACc,KAAV,CAAgBC,UADP;AAEhBP,EAAAA,OAAO,EAAER,SAAS,CAACgB,IAAV,CAAeD;AAFR,CAAlB;AAKA,MAAML,SAAS,GAAG;AAChBO,EAAAA,OAAO,EAAE,MADO;AAEhBC,EAAAA,mBAAmB,EAAE,gBAFL;AAGhBC,EAAAA,OAAO,EAAE;AAHO,CAAlB;AAKA,eAAeb,KAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport UserItem from './UserItem';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { loading, users } = githubContext;\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {users.map(user => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\nUsers.PropTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nconst userStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridGap: '1rem'\r\n};\r\nexport default Users;\r\n"]},"metadata":{},"sourceType":"module"}