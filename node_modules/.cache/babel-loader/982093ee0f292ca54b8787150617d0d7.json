{"ast":null,"code":"import _slicedToArray from\"/Users/robertelias/Desktop/GitHubFinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import AlertContext from'./alertContext';import alertReducer from'./alertReducer';import{SET_ALERT,REMOVE_ALERT}from'../types';var AlertState=function AlertState(props){var initialState=null;var _useReducer=useReducer(alertReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var setAlert=function setAlert(msg,type){dispatch({type:SET_ALERT,payload:{msg:msg,type:type}});setTimeout(function(){return dispatch({type:REMOVE_ALERT});},5000);};return React.createElement(AlertContext.Provider,{value:{alert:state,setAlert:setAlert}},props.children);};export default AlertState;","map":{"version":3,"sources":["/Users/robertelias/Desktop/GitHubFinder/src/context/alert/AlertState.js"],"names":["React","useReducer","AlertContext","alertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","payload","setTimeout","alert","children"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,SAAT,CAAoBC,YAApB,KAAwC,UAAxC,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CAC1B,GAAMC,CAAAA,YAAY,CAAG,IAArB,CAD0B,gBAGAP,UAAU,CAACE,YAAD,CAAeK,YAAf,CAHV,4CAGnBC,KAHmB,iBAGZC,QAHY,iBAK1B,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAMC,IAAN,CAAe,CAC9BH,QAAQ,CAAC,CAAEG,IAAI,CAAET,SAAR,CAAmBU,OAAO,CAAE,CAAEF,GAAG,CAAHA,GAAF,CAAOC,IAAI,CAAJA,IAAP,CAA5B,CAAD,CAAR,CACAE,UAAU,CAAC,iBAAML,CAAAA,QAAQ,CAAC,CAAEG,IAAI,CAAER,YAAR,CAAD,CAAd,EAAD,CAAyC,IAAzC,CAAV,CACD,CAHD,CAKA,MACE,qBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEW,KAAK,CAAEP,KAAT,CAAgBE,QAAQ,CAARA,QAAhB,CAA9B,EACGJ,KAAK,CAACU,QADT,CADF,CAKD,CAfD,CAiBA,cAAeX,CAAAA,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = null;\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  const setAlert = (msg, type) => {\n    dispatch({ type: SET_ALERT, payload: { msg, type } });\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\n  };\n\n  return (\n    <AlertContext.Provider value={{ alert: state, setAlert }}>\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}